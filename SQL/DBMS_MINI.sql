-- Creating the database
CREATE DATABASE FMS;
USE FMS;

-- Creating relations
CREATE TABLE COMPANY(
	COMPANY_ID INT AUTO_INCREMENT,
	COMPANY_NAME VARCHAR(20) NOT NULL,
	EMAIL_ID VARCHAR(25) NOT NULL,
    CONTACT_DETAILS BIGINT NOT NULL,
    STREET VARCHAR(20) NOT NULL,
    CITY VARCHAR(15) NOT NULL,
    ZIPCODE INT(6),
    CONSTRAINT PK_COMPANY PRIMARY KEY(COMPANY_ID));
    
SELECT * FROM COMPANY;

-- ------------------------------------------------------------------------

CREATE TABLE CUSTOMER(
	CUSTOMER_ID INT AUTO_INCREMENT,
    CUSTOMER_NAME VARCHAR(20) NOT NULL,
    EMAIL_ID VARCHAR(25) NOT NULL,
    CUSTOMER_PASSWORD VARCHAR(30) NOT NULL,
    GENDER CHAR(1),
    DOB DATE,
    STREET VARCHAR(20),
    CITY VARCHAR(15),
    ZIPCODE INT(6),
    CONTACT_DETAILS BIGINT,
    CREDIT_POINTS INT DEFAULT 0,
    CONSTRAINT PK_CUSTOMER PRIMARY KEY(CUSTOMER_ID),
    CONSTRAINT UC_CUSTOMER UNIQUE(EMAIL_ID));
    
SELECT * FROM CUSTOMER;

-- ------------------------------------------------------------------------

CREATE TABLE SYS_ADMIN(
	ADMIN_ID INT AUTO_INCREMENT,
    ADMIN_NAME VARCHAR(20) NOT NULL,
    EMAIL_ID VARCHAR(25) NOT NULL,
    ADMIN_PASSWORD VARCHAR(30) NOT NULL,
    GENDER CHAR(1),
    DOB DATE,
    STREET VARCHAR(20),
    CITY VARCHAR(15),
    ZIPCODE INT(6),
    CONTACT_DETAILS BIGINT,
    HIRE_DATE DATE,
    CONSTRAINT PK_ADMIN PRIMARY KEY(ADMIN_ID),
    CONSTRAINT UC_ADMIN UNIQUE(EMAIL_ID),
    CONSTRAINT CHK_ADMIN CHECK(GENDER IN ('M', 'F', 'T')));

SELECT * FROM SYS_ADMIN;

-- ------------------------------------------------------------------------

CREATE TABLE CITY(
	CITY_CODE VARCHAR(10),
    CITY_NAME VARCHAR(15) NOT NULL,
    ZIPCODE INT(6),
    AIRPORT VARCHAR(50) NOT NULL,
    CONSTRAINT PK_CITY PRIMARY KEY(CITY_CODE));

SELECT *FROM CITY;
    
-- ------------------------------------------------------------------------

CREATE TABLE ROUTE(
	ROUTE_ID INT AUTO_INCREMENT,
    START_CITY VARCHAR(10),
    DEST_CITY VARCHAR(10),
    TIME_TAKEN TIME NOT NULL,
    CONSTRAINT PK_START_ROUTE PRIMARY KEY(ROUTE_ID),
    CONSTRAINT FK1_ROUTE FOREIGN KEY(START_CITY) REFERENCES CITY(CITY_CODE) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK2_ROUTE FOREIGN KEY(DEST_CITY) REFERENCES CITY(CITY_CODE) ON DELETE CASCADE ON UPDATE CASCADE);

SELECT * FROM ROUTE;

-- ------------------------------------------------------------------------
    
CREATE TABLE FLIGHT(
	FLIGHT_NO VARCHAR(10),
    MODEL_NAME VARCHAR(25),
    DEPARTURE_TIME TIME NOT NULL,
    ROUTE_ID INT,
    PRICE FLOAT NOT NULL,
    BAGGAGE_ALLOWANCE INT,
	NO_OF_FIRSTCLASS_SEATS INT NOT NULL,
    NO_OF_ECONOMY_SEATS INT NOT NULL,
    NO_OF_BUSINESS_SEATS INT NOT NULL,
    NO_OF_PREMIUM_SEATS INT NOT NULL,
    COMPANY_ID INT,
    CONSTRAINT PK_FLIGHT PRIMARY KEY(FLIGHT_NO),
    CONSTRAINT FK1_FLIGHT FOREIGN KEY(ROUTE_ID) REFERENCES ROUTE(ROUTE_ID) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK2_FLIGHT FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY(COMPANY_ID) ON DELETE CASCADE ON UPDATE CASCADE);

SELECT * FROM FLIGHT;
     
-- ------------------------------------------------------------------------
   
CREATE TABLE PRICE_FACTOR(
	FIRSTCLASS_FACTOR FLOAT,
    ECONOMY_FACTOR FLOAT,
    BUSINESS_FACTOR FLOAT,
    PREMIUM_FACTOR FLOAT);
    
INSERT INTO PRICE_FACTOR VALUES(1.5, 1, 2, 2.5);
SELECT * FROM PRICE_FACTOR;
       
-- ------------------------------------------------------------------------
 
CREATE TABLE JOURNEY_FLIGHT(
	JOURNEY_ID INT AUTO_INCREMENT,
    JOURNEY_DATE DATE, 
    AVAILABLE_FIRSTCLASS_SEATS INT,
	AVAILABLE_ECONOMY_SEATS INT,
    AVAILABLE_BUSINESS_SEATS INT,
    AVAILABLE_PREMIUM_SEATS INT,
    FLIGHT_NO VARCHAR(10),
    JOURNEY_STATUS INT DEFAULT 1,
    CONSTRAINT PK_JOURNEY_FLIGHT PRIMARY KEY(JOURNEY_ID),
    CONSTRAINT FK_JOURNEY_FLIGHT FOREIGN KEY(FLIGHT_NO) REFERENCES FLIGHT(FLIGHT_NO) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_JOURNEY_FLIGHT CHECK(JOURNEY_STATUS IN (0, 1)));
    
SELECT * FROM JOURNEY_FLIGHT;

-- ------------------------------------------------------------------------

CREATE TABLE BOOKS_FLIGHT(
	JOURNEY_ID INT,
    CUSTOMER_ID INT,
    DATE_OF_BOOKING DATETIME NOT NULL,
	PRICE FLOAT,
    SEAT_TYPE VARCHAR(15),
    SEAT_NO VARCHAR(10),
    CONSTRAINT PK_BOOKS_FLIGHT PRIMARY KEY(JOURNEY_ID, CUSTOMER_ID, DATE_OF_BOOKING),
    CONSTRAINT FK1_BOOKS_FLIGHT FOREIGN KEY(JOURNEY_ID) REFERENCES  JOURNEY_FLIGHT(JOURNEY_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK2_BOOKS_FLIGHT FOREIGN KEY(CUSTOMER_ID) REFERENCES  CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_BOOKS_FLIGHT CHECK(SEAT_TYPE IN ('FIRSTCLASS', 'ECONOMY', 'BUSINESS', 'PREMIUM')));

SELECT * FROM BOOKS_FLIGHT;
    
-- ------------------------------------------------------------------------

-- Checking created tables
SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'FMS';
    
    
    
   
	
    
    

    
    

    
    
    
    
    
    