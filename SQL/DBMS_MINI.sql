-- Creating the database
CREATE DATABASE FMS;
USE FMS;

-- Creating relations
CREATE TABLE COMPANY(
	COMPANY_ID INT AUTO_INCREMENT,
	COMPANY_NAME VARCHAR(20) NOT NULL,
	EMAIL_ID VARCHAR(25) NOT NULL,
    CONTACT_DETAILS BIGINT NOT NULL,
    STREET VARCHAR(20) NOT NULL,
    CITY VARCHAR(15) NOT NULL,
    ZIPCODE INT(6),
    CONSTRAINT PK_COMPANY PRIMARY KEY(COMPANY_ID));
    
CREATE TABLE CUSTOMER(
	CUSTOMER_ID INT AUTO_INCREMENT,
    CUSTOMER_NAME VARCHAR(20) NOT NULL,
    EMAIL_ID VARCHAR(25) NOT NULL,
    CUSTOMER_PASSWORD VARCHAR(30) NOT NULL,
    GENDER CHAR(1),
    DOB DATE,
    STREET VARCHAR(20),
    CITY VARCHAR(15),
    ZIPCODE INT(6),
    CONTACT_DETAILS BIGINT,
    CREDIT_POINTS INT DEFAULT 0,
    CONSTRAINT PK_CUSTOMER PRIMARY KEY(CUSTOMER_ID),
    CONSTRAINT UC_CUSTOMER UNIQUE(EMAIL_ID));
    SELECT * FROM CUSTOMER;
    
INSERT INTO CUSTOMER(CUSTOMER_NAME, EMAIL_ID, CUSTOMER_PASSWORD, GENDER, DOB, STREET, CITY, ZIPCODE, CONTACT_DETAILS)
 VALUES ('Jay', 'j@', 'jay', 'M', '2000-01-01', 'New street', 'Pune', 411005, 99887);    
CREATE TABLE SYS_ADMIN(
	ADMIN_ID INT AUTO_INCREMENT,
    ADMIN_NAME VARCHAR(20) NOT NULL,
    EMAIL_ID VARCHAR(25) NOT NULL,
    ADMIN_PASSWORD VARCHAR(30) NOT NULL,
    GENDER CHAR(1),
    DOB DATE,
    STREET VARCHAR(20),
    CITY VARCHAR(15),
    ZIPCODE INT(6),
    CONTACT_DETAILS BIGINT,
    HIRE_DATE DATE,
    CONSTRAINT PK_ADMIN PRIMARY KEY(ADMIN_ID),
    CONSTRAINT UC_ADMIN UNIQUE(EMAIL_ID),
    CONSTRAINT CHK_ADMIN CHECK(GENDER IN ('M', 'F', 'T')));
INSERT INTO SYS_ADMIN(ADMIN_NAME, EMAIL_ID, ADMIN_PASSWORD, GENDER, DOB, STREET, CITY, ZIPCODE, CONTACT_DETAILS, HIRE_DATE)
 VALUES ('Admin', 'a@', 'admin', 'M', '2000-01-01', 'New street', 'Pune', 411005, 99887, '2020-09-14');    
CREATE TABLE CITY(
	CITY_CODE VARCHAR(10),
    CITY_NAME VARCHAR(15) NOT NULL,
    ZIPCODE INT(6),
    AIRPORT VARCHAR(50) NOT NULL,
    CONSTRAINT PK_CITY PRIMARY KEY(CITY_CODE, CITY_NAME, AIRPORT));
    INSERT INTO CITY VALUES('PUN', 'Pune', 411000, 'Pune Airprt');
	INSERT INTO CITY VALUES('BOM', 'Mumbai', 311000, 'Chhatrapati Shivaji Airport');
	INSERT INTO CITY VALUES('UDR', 'Udaipur', 211000, 'Maharana Pratap Airport');
	INSERT INTO CITY VALUES('DEL', 'Delhi', 511000, 'Indira Gandhi Airprt');
    

/*CREATE TABLE AMENITIES(
	AMENITY_ID INT AUTO_INCREMENT,
    AMENITY_SET VARCHAR(40),
    CONSTRAINT PK_AMENITY PRIMARY KEY(AMENITY_ID));
*/
    
CREATE TABLE ROUTE(
	ROUTE_ID INT AUTO_INCREMENT,
    START_CITY VARCHAR(10),
    DEST_CITY VARCHAR(10),
    TIME_TAKEN TIME NOT NULL,
    CONSTRAINT PK_START_ROUTE PRIMARY KEY(ROUTE_ID),
    CONSTRAINT FK1_ROUTE FOREIGN KEY(START_CITY) REFERENCES CITY(CITY_CODE) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK2_ROUTE FOREIGN KEY(DEST_CITY) REFERENCES CITY(CITY_CODE) ON DELETE CASCADE ON UPDATE CASCADE);
    INSERT INTO ROUTE(START_CITY, DEST_CITY, TIME_TAKEN) VALUES('BOM', 'DEL', '04:10:00');
	INSERT INTO ROUTE(START_CITY, DEST_CITY, TIME_TAKEN) VALUES('DEL', 'UDR', '01:15:00');
	INSERT INTO ROUTE(START_CITY, DEST_CITY, TIME_TAKEN) VALUES('DEL', 'PUN', '04:20:00');
    
CREATE TABLE FLIGHT(
	FLIGHT_NO VARCHAR(10),
    DEPARTURE_TIME TIME NOT NULL,
    ROUTE_ID INT NOT NULL,
    TERMINAL_NO INT,
    PRICE FLOAT NOT NULL,
    BAGGAGE_ALLOWANCE INT,
	NO_OF_FIRSTCLASS_SEATS INT NOT NULL,
    NO_OF_ECONOMY_SEATS INT NOT NULL,
    NO_OF_BUSINESS_SEATS INT NOT NULL,
    NO_OF_PREMIUM_SEATS INT NOT NULL,
    COMPANY_ID INT,
    CONSTRAINT PK_FLIGHT PRIMARY KEY(FLIGHT_NO),
    CONSTRAINT FK1_FLIGHT FOREIGN KEY(ROUTE_ID) REFERENCES ROUTE(ROUTE_ID) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK2_FLIGHT FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY(COMPANY_ID) ON DELETE CASCADE ON UPDATE CASCADE);
    
CREATE TABLE PRICE_FACTOR(
	FIRSTCLASS_FACTOR FLOAT,
    ECONOMY_FACTOR FLOAT,
    BUSINESS_FACTOR FLOAT,
    PREMIUM_FACTOR FLOAT,
	CONSTRAINT PK_PRICE_FACTOR PRIMARY KEY(CLASS_NAME));

/*CREATE TABLE BUS(
	VEHICLE_ID VARCHAR(10),
    NO_OF_SLEEPER_SEATS INT NOT NULL,
    NO_OF_SEATER_SEATS INT NOT NULL,
    CONSTRAINT PK_BUS PRIMARY KEY(VEHICLE_ID),
    CONSTRAINT FK_BUS FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID) ON DELETE CASCADE ON UPDATE CASCADE);
  */  
    
/*CREATE TABLE CAR(
	VEHICLE_ID VARCHAR(10),
    NO_OF_SEATS INT NOT NULL,
    CONSTRAINT PK_CAR PRIMARY KEY(VEHICLE_ID),
    CONSTRAINT FK_CAR FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID) ON DELETE CASCADE ON UPDATE CASCADE);
*/
    
/*CREATE TABLE EMPLOYEE(
	EMP_ID INT AUTO_INCREMENT,
    EMP_NAME VARCHAR(20) NOT NULL,
    GENDER CHAR(1),
    SALARY FLOAT,
    AADHAAR_NO INT(12) NOT NULL,
    EMAIL_ID VARCHAR(25),
    CONTACT_DETAILS INT(10) NOT NULL,
    DOB DATE,
    STREET VARCHAR(20) NOT NULL,
    CITY VARCHAR(15) NOT NULL,
    ZIPCODE INT(6),
    EMP_ROLE VARCHAR(15),
    MGR_ID INT,
    VEHICLE_ID VARCHAR(10),
    COMPANY_ID INT,
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY(EMP_ID),
    CONSTRAINT FK1_EMPLOYEE FOREIGN KEY(MGR_ID) REFERENCES EMPLOYEE(EMP_ID) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK2_EMPLOYEE FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK3_EMPLOYEE FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY(COMPANY_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UC_EMPLOYEE UNIQUE(EMAIL_ID),
    CONSTRAINT CHK1_EMPLOYEE CHECK(GENDER IN ('M', 'F', 'T')));
*/

/*CREATE TABLE JOURNEY_CAR(
	JOURNEY_ID INT AUTO_INCREMENT,
    JOURNEY_DATE DATE NOT NULL, 
    AVAILABLE_SEATS INT NOT NULL,
    VEHICLE_ID VARCHAR(10),
    JOURNEY_STATUS INT DEFAULT 1,
    CONSTRAINT PK_JOURNEY_CAR PRIMARY KEY(JOURNEY_ID),
    CONSTRAINT FK_JOURNEY_CAR FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_JOURNEY_CAR CHECK(JOURNEY_STATUS IN (0, 1)));
*/
    
/*CREATE TABLE JOURNEY_BUS(
	JOURNEY_ID INT AUTO_INCREMENT,
    JOURNEY_DATE DATE NOT NULL, 
    AVAILABLE_SLEEPER_SEATS INT NOT NULL,
	AVAILABLE_SEATER_SEATS INT NOT NULL,
    VEHICLE_ID VARCHAR(10),
    JOURNEY_STATUS INT DEFAULT 1,
    CONSTRAINT PK_JOURNEY_BUS PRIMARY KEY(JOURNEY_ID),
    CONSTRAINT FK_JOURNEY_BUS FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_JOURNEY_BUS CHECK(JOURNEY_STATUS IN (0, 1)));
*/
    
CREATE TABLE JOURNEY_FLIGHT(
	JOURNEY_ID INT AUTO_INCREMENT,
    JOURNEY_DATE DATE NOT NULL, 
    AVAILABLE_FIRSTCLASS_SEATS INT NOT NULL,
	AVAILABLE_ECONOMY_SEATS INT NOT NULL,
    AVAILABLE_BUSINESS_SEATS INT NOT NULL,
    AVAILABLE_PREMIUM_SEATS INT NOT NULL,
    FLIGHT_NO VARCHAR(10),
    JOURNEY_STATUS INT DEFAULT 1,
    CONSTRAINT PK_JOURNEY_FLIGHT PRIMARY KEY(JOURNEY_ID),
    CONSTRAINT FK_JOURNEY_FLIGHT FOREIGN KEY(FLIGHT_NO) REFERENCES FLIGHT(FLIGHT_NO) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_JOURNEY_FLIGHT CHECK(JOURNEY_STATUS IN (0, 1)));
    
/*CREATE TABLE BOOKS_CAR(
	JOURNEY_ID INT,
    CUSTOMER_ID INT,
    DATE_OF_BOOKING DATE NOT NULL,
    PRICE FLOAT,
    CONSTRAINT PK_BOOKS_CAR PRIMARY KEY(JOURNEY_ID, CUSTOMER_ID, DATE_OF_BOOKING),
    CONSTRAINT FK1_BOOKS_CAR FOREIGN KEY(JOURNEY_ID) REFERENCES  JOURNEY_CAR(JOURNEY_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK2_BOOKS_CAR FOREIGN KEY(CUSTOMER_ID) REFERENCES  CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE ON UPDATE CASCADE);
*/
    
/*CREATE TABLE BOOKS_BUS(
	JOURNEY_ID INT,
    CUSTOMER_ID INT,
    DATE_OF_BOOKING DATE NOT NULL,
	PRICE FLOAT,
    SEAT_TYPE VARCHAR(15),
    SEAT_NO VARCHAR(10),
    CONSTRAINT PK_BOOKS_BUS PRIMARY KEY(JOURNEY_ID, CUSTOMER_ID, DATE_OF_BOOKING),
    CONSTRAINT FK1_BOOKS_BUS FOREIGN KEY(JOURNEY_ID) REFERENCES  JOURNEY_BUS(JOURNEY_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK2_BOOKS_BUS FOREIGN KEY(CUSTOMER_ID) REFERENCES  CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_BOOKS_BUS CHECK(SEAT_TYPE IN ('SLEEPER', 'SEATER')));
*/
 
CREATE TABLE BOOKS_FLIGHT(
	JOURNEY_ID INT,
    CUSTOMER_ID INT,
    DATE_OF_BOOKING DATE NOT NULL,
	PRICE FLOAT,
    SEAT_TYPE VARCHAR(15),
    SEAT_NO VARCHAR(10),
    CONSTRAINT PK_BOOKS_FLIGHT PRIMARY KEY(JOURNEY_ID, CUSTOMER_ID, DATE_OF_BOOKING),
    CONSTRAINT FK1_BOOKS_FLIGHT FOREIGN KEY(JOURNEY_ID) REFERENCES  JOURNEY_FLIGHT(JOURNEY_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK2_BOOKS_FLIGHT FOREIGN KEY(CUSTOMER_ID) REFERENCES  CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_BOOKS_FLIGHT CHECK(SEAT_TYPE IN ('FIRSTCLASS', 'ECONOMY', 'BUSINESS', 'PREMIUM')));

-- Checking created tables
SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'TMS';


-- DROP DATABASE TMS;

    
    
    
    
   
	
    
    

    
    

    
    
    
    
    
    